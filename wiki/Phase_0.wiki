#summary Software Project Management Plan

Akhil Chopra

Chad Gabrysch

Katie Roberts Hoffman

Rajeev Sharma

Ryan Kelly


== Software Project Management Plan ==

<wiki:toc max_depth="1" />

=== 1. Introduction ===

    _1.1 Project overview_

  * Recent research indicates that there is a great demand for a good ambulance dispatch system. Calling 911 and asking for the ambulance service would connect the caller to a dispatcher (also called dispatch controller) who feeds the information s/he receives from the caller into the system. The system would allocate and mobilize a suitable ambulance within 3 minutes, transmit details to the selected vehicle, and track and monitor actual performance and position. An exception message shall be generated if no free ambulance is available for at least 11 minutes. The system would show the location of each patient and the nearest three ambulances. The system would utilize the notion of ubiquitous computing as much as possible to help with human health and life, which might necessitate going beyond the scope of the traditional ambulance dispatch system.

    _1.2 Evolution of this document_

|| *Version* || *Date* || *Author* || *Comments                                   * ||
|| 0.1 || 6/2/09 || Akhil || Initial draft ||
|| 0.2 || 6/3/09 || Ryan || Updated Managerial Process section ||
|| 0.3 || 6/3/09 || Ryan || filled in project deliverables ||

    _1.3 Project deliverables_

|| 1 || Requirements Specification || Includes Functional and Non-functional requirements plus use cases ||
|| 2 || Requirements Analysis || Includes content from 1 plus high level object model and sequence diagrams ||
|| 3 || Architecture Specification || Includes a sub-system decomposition of 2 plus additional system-scale planning ||
|| 4 || Object Specification || Includes detailed, low level class design based on 2 and 3 ||
|| 5 || Code || Includes a functioning prototype of the system ||
|| 6 || Test Plan || Includes test cases and a plan for implementing them ||



    _1.4 References_

[http://www.utdallas.edu/~chung/CS6354/ UT-Dallas CS 6354 homepage]

    _1.5 Definitions, acronyms, and abbreviations_

|| *Acronym* || *Definition* ||
|| ADS || Ambulance Dispatch System ||
|| Ajax || Asynchronous !JavaScript and XML ||
|| GUI || Graphical User Interface ||
|| JS || !JavaScript ||
|| SPMP || Software Project Management Plan (this document) ||

----

=== 2. Project organization ===

    _2.1 Process model_

  * We will be following the Waterfall model for the project, which means that it is possible to go to higher stage and change the process if at some later stage the process seems to have any faulty assumptions. 

    _2.2 Organizational structure_

  * The team has 5 team members and there are 5 deliverables with 6 phases. There is a team leader for each phase

    _2.3 Organizational boundaries and interfaces_

  * The following is the information of team members with their details in alphabetical order:
|| *Name                      * || *Email              * ||
|| Akhil Chopra	|| airakhil@gmail.com ||
|| Chad Gabrysch || chadgabrysch@gmail.com ||
|| Katie Roberts Hoffman || katierh@gmail.com ||
|| Rajeev Sharma || snrajeev@gmail.com ||
|| Ryan Kelly || ryak2002@gmail.com ||

    _2.4 Project responsibilities_

  * Team leaders during each phase will be responsible for coordinating team meetings, updates, communications, and team deliverables. 

----

=== 3. Managerial process ===

    _3.1 Management objectives and priorities_

      The team leader is responsible for the following:

       * Scheduling and announcing meetings
       * Setting the agenda at meetings
       * Requesting status reports
       * Ensuring group members submit their contributions to deliverables on time
       * Verifying group members' submitted work is of acceptable quality
       * Ensuring assembly of the final draft of the deliverable

    _3.2 Assumptions, dependencies, and constraints_

      The team will make every effort to match the situation and environment of a "real life" team developing an Ambulance Dispatch System, but some aspects of project development may be limited given the innate constraints of a classroom environment.

    _3.3 Risk management_

      Given that the schedule for the project is very aggressive, precautions will need to be taken to assure that all deliverables are ready by the time they are due.

      The team will attempt to accomplish this by allowing contingency time when scheduling work on the project.

      If after all efforts, a due date still appears to be untenable, the group will request that deliverable be rolled into the subsequent deliverable as outlined on the course syllabus. 

    _3.4 Monitoring and controlling mechanisms_

      During team meetings, team members will be assigned work to be completed by a specified date.  Each team member is responsible for making sure they are able to complete the work allocated to them.  

      If for some reason they are unable to complete their assigned work they should contact the project manager immediately so the work can be completed by someone else.  This is only expected to occur during emergency situations, however.

----

=== 4. Technical process ===

    _4.1 Methods, tools, and techniques_

  * The following is the tentative list of the tools used for different purposes during the life cycle of the project
|| *Purpose            * || *Tool                        *||
|| UML Tools || Rational Rose, jude ||
|| Communication Tools || Google Group, this wiki ||
|| Source Control || Google Code SVN ||
|| Website || This [http://code.google.com/p/ase-summer09 webpage] ||

    _4.2 Software documentation_

    _4.3 Project support functions_

----

=== 5. Work elements, schedule, and budget ===

    _5.1 Work Elements_

    _5.2 Schedule_

|| *Phase* || *Date Due* || *Documentation                    * || *Deliverable* || *Manager* ||
|| Phase 0 || June 4 || Software Project Management Plan || N/A || Chad ||
|| Phase 1 || June 16 || Requirements Specification || 0.1 || Chad ||
|| Phase 2 || June 23 || Analysis || 0.2 || Akhil ||
|| Phase 3 || July 7 || Architecture Specification || 0.3 || Katie ||
|| Phase 4 || July 16 || Component/Object Specification || 0.4 || Rajeev ||
|| Phase 5 || July 28 || Final Project Demo/Documentation || 1.0 || Ryan ||	