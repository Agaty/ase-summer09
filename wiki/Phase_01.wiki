#summary Requirement Elicitation Document

Akhil Chopra<br>
Chad Gabrysch<br>
Katie Roberts Hoffman<br>
Rajeev Sharma<br>
Ryan Kelly<br>

Project website: [http://code.google.com/p/ase-summer09 http://code.google.com/p/ase-summer09]

== Software Project Management Plan ==

<wiki:toc max_depth="3" />

=== Version ===
|| *Version* || *Date* || *Author* || *Comments                                   * ||
|| 0.1 || 6/6/09 || Katie || Initial draft ||

=== Introduction ===
    _1.1 Purpose of the system_

    _1.2 Scope of the system_

    _1.3 Objectives and success criteria of the project_

    _1.4 Definitions, acronyms, and abbreviations_

    _1.5 References_

    _1.6 Overview_

The first section of the RAD is an Introduction. Its purpose is to provide a brief overview of the function of the system and the reasons for its development, its scope, and references to the development context (e.g., reference to the problem statement written by the client, references to existing systems, feasibility studies). The introduction also includes the objectives and success criteria of the project.
 
=== Current system ===	

The second section, Current system, describes the current state of affairs. If the new system will replace an existing system, this section describes the functionality and the problems of the current system. Otherwise, this section describes how the tasks supported by the new system are accomplished now.
 
=== Proposed system ===

The third section documents the requirements elicitation and the analysis model of the new system.
 
    _3.1 Overview_

The overview presents a functional overview of the system.
 
    _3.2 Functional requirements_

  * 

Functional requirements describes the high-level functionality of the system.
 
    _3.3 Nonfunctional requirements_

  * 3.3.1 Usability: The system is usable since its a web based system 

  * 3.3.2 Reliability

  * 3.3.3 Performance

  * 3.3.4 Supportability

  * 3.3.5 Implementation

  * 3.3.6 Interface

  * 3.3.7 Packaging

  * 3.3.8 Legal 	

Nonfunctional requirements describes user-level requirements that are not directly related to functionality. This includes usability, reliability, performance, supportability, implementation, interface, operational, packaging, and legal requirements.
 
    _3.4 System models_

  * 3.4.1 Scenarios

  # Carl is out walking his dog and sees Josh who has been stabbed.  Carl calls 911 and and speaks to Susan, the call taker.  Carl provides Susan with the address and details of the situation.  Steve the dispatcher dispatches an available ambulance to the scene.  The ambulance takes Josh to the hospital and reports it is available for dispatch again.<br><br>
  # Little Joey sees his grandpa sprain his ankle.  Juan the call taker recieves the call and logs the incident.  Elijah the dispatcher dispatches an ambulance.  A severe fire breaks out and many people are injured.  Christian, a senior dispatcher decides the burn victims are in more critical condition and recalls the ambulance dispatched to Joey's grandpa directing it to help the burn victims.<br><br>
  # Victoria is unsatisfied with her pizza delivery time.  She calls 911 to report that her pizza has not arrived.  Anna, the call taker files an incident and flags it to be ignored due to being a non-emergency situation.<br><br>
  # Brandon calls 911 to report a broken ankle.  Tyler, the call taker flags the incident as non life-threatening.  Then Brandon's grandma, Allison falls down the stairs and is seriously wounded.  Brandon calls back and reports that the situation is now life treatening.  Savannah, the new call taker updates the incident to be serious and an ambulance is dispatched quickly.<br><br>
  # The city just approved $500 million for new ambulances and Gabriel adds the new 12 ambulances to the dispatch system.<br><br>
  # An off-duty ambulance is in a serious traffic accident and will be unable to be used anymore.  Emma removes the ambulance from the system.<br><br>
  # Isabella, the ambulance driver reports her location to the system and Madison, the dispatcher updates the system with the new position data.<br><br>
  # Logan calls in a false fire emergency.  Mia, the call taker logs an incident.  Hannah, the dispatcher dispatches an ambulance to the emergency.  When Ella, the ambulance driver arrives on the scene, she calls and reports that it was a false alarm.  Lily, the call taker flags the incident as a false alarm.<br><br>
  # Sarah calls and reports a fire.  Mia logs an incident and Alexis dispatches an ambulance.  Then, Ryan calls and reports the same fire.  The system notifies the call taker that this incident is very simlilar to an existing incident.  Noah decides this is the same incident and flags the incident as a duplicate.<br><br>
  * 3.4.2 Use case model

  * 3.4.3 Object model *Omitted in Phase 1, Added in Phase 2*

  * 3.4.4 Dynamic model *Omitted in Phase 1, Added in Phase 2*

  * 3.4.5 User interface navigational paths and screen mock-ups *Omitted in Phase 1, Added in Phase 2*	

System models describes the scenarios, use cases, object model, and dynamic models for the system. This section contains the complete functional specification, including mock-ups illustrating the user interface of the system and navigational paths representing the sequence of screens. The subsections Object model and Dynamic model are written during the Analysis activity.
 
=== Glossary ===

A glossary of important terms, to ensure consistency in the specification and to ensure that we use the client's terms.