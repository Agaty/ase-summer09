#summary Requirement Elicitation Document

Akhil Chopra<br>
Chad Gabrysch<br>
Katie Roberts Hoffman<br>
Rajeev Sharma<br>
Ryan Kelly<br>

Project website: [http://code.google.com/p/ase-summer09 http://code.google.com/p/ase-summer09]

== Software Project Management Plan ==

<wiki:toc max_depth="3" />

=== Version ===
|| *Version* || *Date* || *Author* || *Comments                                   * ||
|| 0.1 || 6/6/09 || Katie || Initial draft ||
|| 0.15 || 6/6/09 || Ryan || Added scenerios ||
|| 0.2 || 6/7/09 || Akhil & Rajeev || Added Non Functional Requirements ||
|| 0.3 || 6/7/09 || Akhil & Rajeev || Added Assumptions & Dependencies ||
|| 0.4 || 6/7/09 || Akhil & Rajeev || Uploaded SIG and Process Specification for review||
|| 0.5 || 6/9/09 || Akhil & Rajeev || Added Functional Requirements,Updated Section 1.7||



=== 1 Introduction ===
    _1.1 Purpose of the system_

    _1.2 Scope of the system_

    _1.3 Objectives and success criteria of the project_

    _1.4 Definitions, acronyms, and abbreviations_

  CRUD - Create, Read, Update, Delete.  Used for use cases involving the manipulation of a particular set of data.  

  For example, the set of CRUD operations related to Ambulances would be:
  # *C* reating an ambulance<br>
  # *R* etrieving data about a particular ambulance<br>
  # *U* pdating data about a particular ambulance<br>
  # *D* eleting an ambulance.

    _1.5 References_

    _1.6 Overview_

    _1.7 Assumptions and Dependencies_

The first section of the RAD is an Introduction. Its purpose is to provide a brief overview of the function of the system and the reasons for its development, its scope, and references to the development context (e.g., reference to the problem statement written by the client, references to existing systems, feasibility studies). The introduction also includes the objectives and success criteria of the project.

  _*1.7Assumptions and Dependencies_

 * Assume dispatcher has clearly defined guidelines for how to enter information into system.
 * Assume dispatcher is qualified user of the system.
 * The dispatcher has requested as much information as possible from the caller.
 * The internet and telephone networks are working fine.
 * The system admin and the system experts are available.
 * All the ambulances are equipped with state of art GPS systems with traffic monitoring.
 * All the ambulance drivers are experienced and are well familiar with the local area.
 * All hospitals are of high standards with reasonable capacity with advanced and cutting edge technologies.
 * All the ambulances also have maps for use in case of GPS failures.
=== 2. Current system ===	

The second section, Current system, describes the current state of affairs. If the new system will replace an existing system, this section describes the functionality and the problems of the current system. Otherwise, this section describes how the tasks supported by the new system are accomplished now.
 
=== 3. Proposed system ===

The third section documents the requirements elicitation and the analysis model of the new system.
 
    _3.1 Overview_

The overview presents a functional overview of the system.
 
    _*3.2 Functional requirements*_

 # The call taker shall answer the call from the caller and use the system to record the conversation. The call taker shall see a list of specific pre-defined questions as soon as the call is connected. The questions shall be: What is the location of the caller and the concerned incident? What’s the nearest street the caller can see? What’s the nearest building the caller can see? What’s the nearest parking lot the caller can see? What’s the age of the patient? What‘s the sex of the patient? What’s the current situation of the patient: Is the patient conscious?, Is the patient bleeding?
 # The call taker shall submit the information in the following format:Number of Patients,Location,Status,Age,Sex.
 # The dispatcher shall receive all the information submitted by the caller taker and assign the following resources and status to the case:Priority, Number of Ambulances, Type of Ambulances, Location of 2 nearby hospitals.
 # The dispatcher shall provide the ambulance driver with the following information: Location, Priority, and Location of 2 nearest hospital to the incident location. 
 # The GPS on the ambulance shall acknowledge its position to the system so that the dispatcher is aware of the ambulance status and position every 10 mins.
 # The dispatcher shall be able to monitor all the cases and ambulances.
 # The dispatcher shall be able to edit the priority level to the case and convey the same to the ambulance driver.
 # The dispatcher shall communicate with the driver through the system via automated messages. Along with this the both dispatcher and ambulance driver shall be able to communicate with each other through Walkie-talkie.
 # If the caller calls from the same number more than once then the system shall route the case to the supervisor of the dispatcher. The supervisor shall review the case and take suitable action.
 # If system is idle for a more than 10 mins, then system shall start dispatching ambulances automatically based on priority.
    
    _3.3 *Softgoal Interdependency Diagram*_
 
    _3.4 *Nonfunctional requirements*_

*3.4.1 Reliability Requirements:*

The Ambulance Dispatch System is used to send ambulances to save the lives of the people who may be in emergency conditions. Thus reliability is one of the very important non functional requirements. Reliability can be classified into two categories:

* Consistency:

The system shall consistently provide accurate results while finding the location of the ambulances and estimating their time to arrive at the reported location. The system shall not provide ambiguous results or randomly provide correct and incorrect results. The system shall notify the dispatcher of possible duplicate calls.

* Fault Detection and Tolerance:

The system shall recover from any exceptions and other error conditions and does not crash while in operation. For this the system shall detect any such errors and report them to the user. In case of a serious exception, the system shall be able to recover from the error and restore the state back to the last stable state.

*3.4.2 Usability Requirements:*

* Usability:

The system shall be user friendly and allows the user to quickly create new incidents, read and edit existing incidents. In order to facilitate this ease of use, the system shall provide a Graphical User Interface, which clearly shows the map of the site from where the incident was reported. This map shall show the exact locations of the nearest hospital and the ambulance and shall assist the call taker to send the nearest ambulance to the location of incident. The system shall automatically suggest address locations based on the descriptions provided by the caller.

* Understandability:

The system shall be easy to understand and learn how to use. The screens shown in the system shall have all the information that is used in the present manual system and thus shall be easy for the users to learn. It shall provide user manuals and other training materials that shall help the users to easily learn how to use the system effectively.

*3.4.3 Performance Requirements:*

* Responsiveness:

The system shall be fast and provide accurate results within 1 minute of incident report input so that the ambulance could be sent within 3 minutes. The system shall immediately update the location information of the ambulance every time it receives an update from the operator. The ambulance operator shall report his/her location to the dispatcher every 5 minutes. 

* Load :

The system shall be capable to process up to 500 calls per day. The system shall support 50 dispatchers to record incidents and can support up to 100 ambulances.

*3.4.4 Security Requirements:*

*Confidentiality:

The system shall provide confidentiality to the users. The users shall be first authenticated with their user id and password and if found to be valid users are allowed access to use the system

* Integrity:

The system shall make sure that the data that is entered by the user is not altered without his/her knowledge and the data remains secure. This shall be achieved by means of a secure database server

* Availability:

The system shall be available 24X7 for 365 days a year

*3.4.5 Supportability*

The system shall provide the help of a system administrator who can help resolve technical difficulties that the users are facing. The system shall also provide the services of a system expert who helps the users in using the system. The system expert shall be supervisors and shall be available to answer the technical questions by phone.	

 
    *_3.5 System models_*

  * 3.5.1 Scenarios

  # Carl is out walking his dog and sees Josh who has been stabbed.  Carl calls 911 and and speaks to Susan, the call taker.  Carl provides Susan with the address and details of the situation.  Steve the dispatcher dispatches an available ambulance to the scene.  The ambulance takes Josh to the hospital and reports it is available for dispatch again.<br><br>
  # Little Joey sees his grandpa sprain his ankle.  Juan the call taker recieves the call and logs the incident.  Elijah the dispatcher dispatches an ambulance.  A severe fire breaks out and many people are injured.  Christian, a senior dispatcher decides the burn victims are in more critical condition and recalls the ambulance dispatched to Joey's grandpa directing it to help the burn victims.<br><br>
  # Victoria is unsatisfied with her pizza delivery time.  She calls 911 to report that her pizza has not arrived.  Anna, the call taker files an incident and flags it to be ignored due to being a non-emergency situation.<br><br>
  # Brandon calls 911 to report a broken ankle.  Tyler, the call taker flags the incident as non life-threatening.  Then Brandon's grandma, Allison falls down the stairs and is seriously wounded.  Brandon calls back and reports that the situation is now life threatening.  Savannah, the new call taker updates the incident to be serious and an ambulance is dispatched quickly.<br><br>
  # The city just finished a $500 million program to purchase new ambulances and Gabriel adds the new 12 ambulances to the dispatch system.<br><br>
  # An off-duty ambulance is in a serious traffic accident and will be unable to be used anymore.  Emma removes the ambulance from the system.<br><br>
  # Isabella, the ambulance driver reports her location to the system and Madison, the dispatcher updates the system with the new position data.<br><br>
  # Logan calls in a false fire emergency.  Mia, the call taker logs an incident.  Hannah, the dispatcher dispatches an ambulance to the emergency.  When Ella, the ambulance driver arrives on the scene, she calls and reports that it was a false alarm.  Lily, the call taker flags the incident as a false alarm.<br><br>
  # Sarah calls and reports a fire.  Mia logs an incident and Alexis dispatches an ambulance.  Then, Ryan calls and reports the same fire.  The system notifies the call taker that this incident is very similar to an existing incident.  Noah decides this must be the same incident and flags the incident as a duplicate.<br><br>
  * 3.5.2 Use case model
  * 3.5.2.1 Use case diagrams
http://ase-summer09.googlecode.com/files/use%20case%20model.png

[http://ase-summer09.googlecode.com/files/use%20case%20model.uml This is a StarUML file of the use-case model]

  * 3.5.2.2 Use case templates

|| Use case name:  || CRUD Incidents ||
|| Participating Actors: || ||
|| Exceptions: || ||
|| Flow of Events: || ||
|| Special Requirements: || ||

|| Use case name:  || CRUD Ambulances||
|| Participating Actors: || ||
|| Exceptions: || ||
|| Flow of Events: || ||
|| Special Requirements: || ||

|| Use case name:  || Dispatch Ambulance to Incident ||
|| Participating Actors: || ||
|| Exceptions: || ||
|| Flow of Events: || ||
|| Special Requirements: || ||

|| Use case name:  || Recall Ambulance from Incident ||
|| Participating Actors: || ||
|| Exceptions: || ||
|| Flow of Events: || ||
|| Special Requirements: || ||

  * 3.5.3 Object model *Omitted in Phase 1, Added in Phase 2*

  * 3.5.4 Dynamic model *Omitted in Phase 1, Added in Phase 2*

  * 3.5.5 User interface navigational paths and screen mock-ups *Omitted in Phase 1, Added in Phase 2*	

System models describes the scenarios, use cases, object model, and dynamic models for the system. This section contains the complete functional specification, including mock-ups illustrating the user interface of the system and navigational paths representing the sequence of screens. The subsections Object model and Dynamic model are written during the Analysis activity.
 
=== Glossary ===

A glossary of important terms, to ensure consistency in the specification and to ensure that we use the client's terms.